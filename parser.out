Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> operacion
Rule 1     operacion -> NUMERO MAS NUMERO
Rule 2     operacion -> NUMERO MENOS NUMERO
Rule 3     operacion -> NUMERO POR NUMERO
Rule 4     operacion -> NUMERO DIVIDIDO NUMERO

Terminals, with rules where they appear

DIVIDIDO             : 4
MAS                  : 1
MENOS                : 2
NUMERO               : 1 1 2 2 3 3 4 4
POR                  : 3
error                : 

Nonterminals, with rules where they appear

operacion            : 0

Parsing method: LALR

state 0

    (0) S' -> . operacion
    (1) operacion -> . NUMERO MAS NUMERO
    (2) operacion -> . NUMERO MENOS NUMERO
    (3) operacion -> . NUMERO POR NUMERO
    (4) operacion -> . NUMERO DIVIDIDO NUMERO

    NUMERO          shift and go to state 2

    operacion                      shift and go to state 1

state 1

    (0) S' -> operacion .



state 2

    (1) operacion -> NUMERO . MAS NUMERO
    (2) operacion -> NUMERO . MENOS NUMERO
    (3) operacion -> NUMERO . POR NUMERO
    (4) operacion -> NUMERO . DIVIDIDO NUMERO

    MAS             shift and go to state 3
    MENOS           shift and go to state 4
    POR             shift and go to state 5
    DIVIDIDO        shift and go to state 6


state 3

    (1) operacion -> NUMERO MAS . NUMERO

    NUMERO          shift and go to state 7


state 4

    (2) operacion -> NUMERO MENOS . NUMERO

    NUMERO          shift and go to state 8


state 5

    (3) operacion -> NUMERO POR . NUMERO

    NUMERO          shift and go to state 9


state 6

    (4) operacion -> NUMERO DIVIDIDO . NUMERO

    NUMERO          shift and go to state 10


state 7

    (1) operacion -> NUMERO MAS NUMERO .

    $end            reduce using rule 1 (operacion -> NUMERO MAS NUMERO .)


state 8

    (2) operacion -> NUMERO MENOS NUMERO .

    $end            reduce using rule 2 (operacion -> NUMERO MENOS NUMERO .)


state 9

    (3) operacion -> NUMERO POR NUMERO .

    $end            reduce using rule 3 (operacion -> NUMERO POR NUMERO .)


state 10

    (4) operacion -> NUMERO DIVIDIDO NUMERO .

    $end            reduce using rule 4 (operacion -> NUMERO DIVIDIDO NUMERO .)

